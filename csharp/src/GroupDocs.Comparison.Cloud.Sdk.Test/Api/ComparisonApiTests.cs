/* 
 * GroupDocs.Comparison for Cloud API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 18.4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using GroupDocs.Comparison.Cloud.Sdk.Client;
using GroupDocs.Comparison.Cloud.Sdk.Api;
using GroupDocs.Comparison.Cloud.Sdk.Model;

namespace GroupDocs.Comparison.Cloud.Sdk.Test
{
    /// <summary>
    ///  Class for testing ComparisonApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ComparisonApiTests
    {
        private ComparisonApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ComparisonApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ComparisonApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ComparisonApi
            //Assert.IsInstanceOfType(typeof(ComparisonApi), instance, "instance is a ComparisonApi");
        }

        
        /// <summary>
        /// Test Comparison
        /// </summary>
        [Test]
        public void ComparisonTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComparisonRequest request = null;
            //string outPath = null;
            //var response = instance.Comparison(request, outPath);
            //Assert.IsInstanceOf<Link> (response, "response is Link");
        }
        
        /// <summary>
        /// Test ComparisonImages
        /// </summary>
        [Test]
        public void ComparisonImagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComparisonRequest request = null;
            //string outFolder = null;
            //var response = instance.ComparisonImages(request, outFolder);
            //Assert.IsInstanceOf<List<Link>> (response, "response is List<Link>");
        }
        
        /// <summary>
        /// Test ComparisonImagesStream
        /// </summary>
        [Test]
        public void ComparisonImagesStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComparisonRequest request = null;
            //var response = instance.ComparisonImagesStream(request);
            //Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
        /// <summary>
        /// Test ComparisonStream
        /// </summary>
        [Test]
        public void ComparisonStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComparisonRequest request = null;
            //var response = instance.ComparisonStream(request);
            //Assert.IsInstanceOf<System.IO.Stream> (response, "response is System.IO.Stream");
        }
        
    }

}
